version: 2
jobs:

  test-3.7: &full-test-template
    docker:
      - image: circleci/python:3.7-stretch

    steps:
      - checkout

      - restore_cache:
          keys:
            - env-{{ checksum "requirements.txt" }}-{{ checksum "penaltymodel_core/requirements.txt" }}-{{ checksum "penaltymodel_cache/requirements.txt" }}-{{ checksum "penaltymodel_maxgap/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: &create-virtualenv-template
          name: create virtual environement
          command: |
            python -m virtualenv env

      - run: &install-requirements-template
          name: install requirements
          command: |
            . env/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./env
          key: env-{{ checksum "requirements.txt" }}-{{ checksum "penaltymodel_core/requirements.txt" }}-{{ checksum "penaltymodel_cache/requirements.txt" }}-{{ checksum "penaltymodel_maxgap/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: &install-core-template
          name: install penaltymodel
          command: |
            . env/bin/activate
            pip install penaltymodel_core/

      - run: &install-cache-template
          name: install penaltymodel-cache
          command: |
            . env/bin/activate
            pip install penaltymodel_cache/

      - run: &install-maxgap-template
          name: install penaltymodel-maxgap
          command: |
            . env/bin/activate
            pip install penaltymodel_maxgap/

      - run: &install-mip-template
          name: install penaltymodel-mip
          command: |
            . env/bin/activate
            pip install penaltymodel_mip/

      - run: &install-lp-template
          name: install penaltymodel-lp
          command: |
            . env/bin/activate
            pip install penaltymodel_lp/

      - run: &core-tests-template
          name: core tests
          command: |
            . env/bin/activate
            coverage run -a -m unittest discover -s penaltymodel_core/
        
      - run: &cache-tests-template
          name: cache tests
          command: |
            . env/bin/activate
            coverage run -a -m unittest discover -s penaltymodel_cache/

      - run: &maxgap-tests-template
          name: maxgap tests
          command: |
            . env/bin/activate
            coverage run -a -m unittest discover -s penaltymodel_maxgap/

      - run: &lp-tests-template
          name: lp tests
          command: |
            . env/bin/activate
            coverage run -a -m unittest discover -s penaltymodel_lp/

      - run: &mip-tests-template
          name: mip tests
          command: |
            . env/bin/activate
            coverage run -a -m unittest discover -s penaltymodel_mip/

      - run: &integration-tests-template
          name: integration tests
          command: |
            . env/bin/activate
            python -m unittest discover tests/

      - run:
          name: doctest
          command: |
            . env/bin/activate
            make -C docs/ doctest

      - run:
          name: codecov
          command: |
            . env/bin/activate
            codecov

  test-3.6:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.6-jessie

  test-3.5:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.5-jessie

  # test-3.4:
  #   <<: *full-test-template
  #   docker:
  #     - image: circleci/python:3.4-jessie

  test-2.7:
    <<: *full-test-template
    docker:
      - image: circleci/python:2.7-jessie

  test-osx-3.7: &osx-tests-template
    macos:
      xcode: "10.1.0"
    environment:
      PYTHON: 3.7.0
      HOMEBREW_NO_AUTO_UPDATE: 1  # for 3.7 we need to update homebrew

    working_directory: ~/repo

    steps:
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: install python
          command: |
            pyenv install $PYTHON -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: pyenv-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: create virtualenv
          command: |
            eval "$(pyenv init -)"
            pyenv local $PYTHON
            python -m pip install virtualenv
            python -m virtualenv env

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *install-requirements-template

      - save_cache:
          paths:
            - ./env
          key: v1-dependencies-{{ checksum "requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: *install-core-template

      - run: *install-cache-template

      - run: *install-maxgap-template

      - run: *install-mip-template

      - run: *install-lp-template

      - run: *core-tests-template

      - run: *cache-tests-template

      - run: *maxgap-tests-template

      - run: *mip-tests-template

      - run: *lp-tests-template

      - run: *integration-tests-template

  test-osx-3.6:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.6.5
      HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-3.5:
    <<: *osx-tests-template
    environment:
      PYTHON: 3.5.5
      HOMEBREW_NO_AUTO_UPDATE: 1

  # test-osx-3.4:
  #   <<: *osx-tests-template
  #   environment:
  #     PYTHON: 3.4.8
  #     HOMEBREW_NO_AUTO_UPDATE: 1

  test-osx-2.7:
    <<: *osx-tests-template
    environment:
      PYTHON: 2.7.15
      HOMEBREW_NO_AUTO_UPDATE: 1

  deploy-core:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run: *create-virtualenv-template

      - run: *install-core-template

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            [[ "$(pip show penaltymodel 2>/dev/null | grep Version)" == "Version: $(echo "$CIRCLE_TAG" | sed -E 's/core-([0-9]+\.[0-9]+\.[0-9]+(\.dev[0-9]*)?)$/\1/')" ]]

      - run: &pypirc-file-template
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = dwtools-ci" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
            mkdir dist

      - run:
          name: build sdist and bdist
          command: |
            . env/bin/activate
            cd penaltymodel_core
            python setup.py sdist
            python setup.py bdist_wheel
            mv dist/* ../dist/

      - run: &twine-template
          name: upload
          command: |
            . env/bin/activate
            pip install twine
            twine upload dist/*

  deploy-maxgap:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run: *create-virtualenv-template

      - run: *install-core-template

      - run: *install-maxgap-template

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            [[ "$(pip show penaltymodel-maxgap 2>/dev/null | grep Version)" == "Version: $(echo "$CIRCLE_TAG" | sed -E 's/maxgap-([0-9]+\.[0-9]+\.[0-9]+(\.dev[0-9]*)?)$/\1/')" ]]

      - run: *pypirc-file-template

      - run:
          name: build sdist
          command: |
            . env/bin/activate
            cd penaltymodel_maxgap
            python setup.py sdist
            mv dist/* ../dist/

      - run: *twine-template

  deploy-cache:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run: *create-virtualenv-template

      - run: *install-core-template

      - run: *install-cache-template

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            [[ "$(pip show penaltymodel-cache 2>/dev/null | grep Version)" == "Version: $(echo "$CIRCLE_TAG" | sed -E 's/cache-([0-9]+\.[0-9]+\.[0-9]+(\.dev[0-9]*)?)$/\1/')" ]]

      - run: *pypirc-file-template

      - run:
          name: build bdist and sdist
          command: |
            . env/bin/activate
            cd penaltymodel_cache
            python setup.py sdist
            python setup.py bdist_wheel
            mv dist/* ../dist/

      - run: *twine-template

  deploy-mip:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run: *create-virtualenv-template

      - run: *install-core-template

      - run: *install-mip-template

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            [[ "$(pip show penaltymodel-mip 2>/dev/null | grep Version)" == "Version: $(echo "$CIRCLE_TAG" | sed -E 's/mip-([0-9]+\.[0-9]+\.[0-9]+(\.dev[0-9]*)?)$/\1/')" ]]

      - run: *pypirc-file-template

      - run:
          name: build bdist and sdist
          command: |
            . env/bin/activate
            cd penaltymodel_mip
            python setup.py sdist
            python setup.py bdist_wheel
            mv dist/* ../dist/

      - run: *twine-template

  deploy-lp:
    docker:
      - image: circleci/python:3.6-jessie

    working_directory: ~/repo

    steps:
      - checkout

      - run: *create-virtualenv-template

      - run: *install-core-template

      - run: *install-lp-template

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            [[ "$(pip show penaltymodel-lp 2>/dev/null | grep Version)" == "Version: $(echo "$CIRCLE_TAG" | sed -E 's/lp-([0-9]+\.[0-9]+\.[0-9]+(\.dev[0-9]*)?)$/\1/')" ]]

      - run: *pypirc-file-template

      - run:
          name: build bdist and sdist
          command: |
            . env/bin/activate
            cd penaltymodel_lp
            python setup.py sdist
            python setup.py bdist_wheel
            mv dist/* ../dist/

      - run: *twine-template

workflows:
  version: 2
  test:
    jobs:
      - test-3.7
      - test-3.6
      - test-3.5
      # - test-3.4
      - test-2.7
      - test-osx-3.7
      - test-osx-3.6
      - test-osx-3.5
      # - test-osx-3.4
      - test-osx-2.7
      - deploy-core:
          filters:
            tags:
              only: /^core-[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - deploy-cache:
          filters:
            tags:
              only: /^cache-[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - deploy-maxgap:
          filters:
            tags:
              only: /^maxgap-[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - deploy-mip:
          filters:
            tags:
              only: /^mip-[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
      - deploy-lp:
          filters:
            tags:
              only: /^lp-[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
