version: 2.1

orbs:
  win: circleci/windows@5.0
  macos: circleci/macos@2.4

jobs:
  test-linux:
    parameters:
      python-version:
        type: string

    docker:
      - image: python:3.10

    steps: &test-package
      - checkout
      - run:
          name: Install Python and create venv
          command: |
            python -m pip install uv
            python -m uv venv --python << parameters.python-version >>
            uv pip install -r "requirements.txt" -r "tests\requirements.txt"
            uv run -m unittest

  test-macos:
    parameters:
      python-version:
        type: string

    macos:
      xcode: 16.4.0  # latest as of August 2025
    resource_class: macos.m1.medium.gen1

    steps: *test-package

  test-win:
    parameters:
      python-version:
        type: string

    executor:
      name: win/default

    steps: *test-package

  test-dependencies:
    parameters:
      python-version:
        type: string
      pip-constraints:
        type: string

    docker:
      - image: python:3.10

    steps:
      - checkout
      - run:
          name: Install Python and create venv
          command: |
            python -m pip install uv
            python -m uv venv --python << parameters.python-version >>
            uv pip install . -c <(printf '%s\n' << parameters.pip-constraints >>) --only-binary=dimod --only-binary=numpy --only-binary=scipy --only-binary=networkx
            cd tests
            uv run -m unittest

  pypi-deploy:
    docker:
      - image: python:3.10

    steps:
      - checkout
      - run:
          name: deploy
          command: |
            python -m venv env
            . env/bin/activate
            python -m pip install twine build
            python -m build -odist
            twine upload -u "$PYPI_USERNAME" -p "$PYPI_PASSWORD" --skip-existing ./dist/*

workflows:
  test:
    jobs:
      - test-linux:
          matrix:
            parameters:
              python-version: &python-versions ["3.9", "3.10", "3.11", "3.12", "3.13", "3.14"]
      - test-macos:
          matrix:
            parameters:
              python-version: *python-versions
      - test-win:
          matrix:
            parameters:
              python-version: *python-versions
      - test-dependencies:
          name: python-dependencies-oldest
          python-version: "3.9"
          pip-constraints: dimod==0.10.9 scipy==1.6.0 numpy==1.20.0 networkx==2.4
      - test-dependencies:
          name: python-dependencies-latest
          python-version: "3.14"
          pip-constraints: dimod~=0.12.0 scipy~=1.0 numpy~=2.0 networkx~=3.0

  deploy:
    jobs:
      - pypi-deploy:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*((\.dev|rc)([0-9]+)?)?$/
            branches:
              ignore: /.*/
