version: 2
jobs:

  test-3.6: &full-test-template
    docker:
      - image: circleci/python:3.6-jessie
        environment:
          PYTHON_TAG: python3.6

    steps:
      - checkout

      #
      # penaltymodel-core
      #

      - restore_cache:
          keys:
            - core-dep-{{ checksum "penaltymodel_core/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: install penaltymodel-core dependencies
          command: |
            python -m virtualenv env
            . env/bin/activate
            pip install -r penaltymodel_core/requirements.txt

      - save_cache:
          paths:
            - ./env
          key: core-dep-{{ checksum "penaltymodel_core/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
        
      - run:
          name: run core unittests
          command: |
            . env/bin/activate
            cd penaltymodel_core
            python -m unittest discover

      - run:
          name: clear environment
          command: |
            rm -rf env

      #
      # penaltymodel-cache
      #

      - restore_cache:
          keys:
            - core-dep-{{ checksum "penaltymodel_core/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
            - cache-dep-{{ checksum "penaltymodel_cache/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: install penaltymodel-cache dependencies
          command: |
            python -m virtualenv env
            . env/bin/activate
            pip install -r penaltymodel_cache/requirements.txt
            pip install -e penaltymodel_core/

      - save_cache:
          paths:
            - ./env
          key: cache-dep-{{ checksum "penaltymodel_cache/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
        
      - run:
          name: run cache tests
          command: |
            . env/bin/activate
            cd penaltymodel_cache
            python -m unittest discover

      - run:
          name: clear environment
          command: |
            rm -rf env

      #
      # penaltymodel-maxgap
      #

      - restore_cache:
          keys:
            - core-dep-{{ checksum "penaltymodel_core/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}
            - maxgap-dep-{{ checksum "penaltymodel_maxgap/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: install penaltymodel-maxgap dependencies
          command: |
            python -m virtualenv env
            . env/bin/activate
            pip install -r penaltymodel_maxgap/requirements.txt
            pip install -e penaltymodel_core/

      - run:
          name: install SMT solvers
          # installs them in .smt_solvers
          command: |
            . env/bin/activate
            pysmt-install --z3 --confirm-agreement
            pysmt-install --env | sed -e 's/export PYTHONPATH="//g' | sed -e 's/:${PYTHONPATH}"//g' > $VIRTUAL_ENV/lib/$PYTHON_TAG/site-packages/smt.pth

      - save_cache:
          paths:
            - ./env
            - ~/.smt_solvers
          key: maxgap-dep-{{ checksum "penaltymodel_maxgap/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: run maxgap tests
          command: |
            . env/bin/activate
            cd penaltymodel_maxgap
            python -m unittest discover

      - run:
          name: verify z3 installs with pip
          command: |
            python -m virtualenv tmp
            . tmp/bin/activate
            cd penaltymodel_maxgap
            pip install -e ../penaltymodel_core/ .
            python -m unittest penaltymodel_maxgap.tests.test_smt.TestTheta

      # doctests, reuse the maxgap environment rather than needing to install the smt again

      - run:
          name: doctest
          command: |
            . env/bin/activate
            cd docs
            pip install -r requirements.txt
            make doctest

  test-3.5:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.5-jessie
        environment:
          PYTHON_TAG: python3.5

  test-3.4:
    <<: *full-test-template
    docker:
      - image: circleci/python:3.4-jessie
        environment:
          PYTHON_TAG: python3.4

  test-2.7:
    <<: *full-test-template
    docker:
      - image: circleci/python:2.7-jessie
        environment:
          PYTHON_TAG: python2.7

  deploy-penaltymodel-core:
    docker:
      - image: circleci/python:3.6-jessie

    steps:
      - checkout

      - run:
          name: install dependencies and penaltymodel-core
          command: |
            python -m virtualenv env
            . env/bin/activate
            cd penaltymodel_core
            pip install -r requirements.txt
            pip install .

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            python ci_utils/verify_penaltymodel_version.py

      - run:
          name: init .pypirc
          command: |
            cd penaltymodel_core
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = dwtools-ci" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: make packages and upload
          command: |
            . env/bin/activate
            cd penaltymodel_core
            python setup.py sdist
            python setup.py bdist_wheel
            twine upload dist/*

  deploy-penaltymodel-cache:
    docker:
      - image: circleci/python:3.6-jessie

    steps:
      - checkout

      - run:
          name: install dependencies and penaltymodel-cache
          command: |
            python -m virtualenv env
            . env/bin/activate
            cd penaltymodel_cache
            pip install -r requirements.txt
            pip install .

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            python ci_utils/verify_penaltymodel_cache_version.py

      - run:
          name: init .pypirc
          command: |
            cd penaltymodel_cache
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = dwtools-ci" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: make packages and upload
          command: |
            . env/bin/activate
            cd penaltymodel_cache
            python setup.py sdist
            python setup.py bdist_wheel
            twine upload dist/*

  deploy-penaltymodel-maxgap:
    docker:
      - image: circleci/python:3.6-jessie

    steps:
      - checkout

      - run:
          name: install dependencies and penaltymodel-maxgap
          command: |
            python -m virtualenv env
            . env/bin/activate
            cd penaltymodel_maxgap
            pip install -r requirements.txt
            pip install .

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            python ci_utils/verify_penaltymodel_maxgap_version.py

      - run:
          name: init .pypirc
          command: |
            cd penaltymodel_maxgap
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = dwtools-ci" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc

      - run:
          name: make packages and upload
          command: |
            . env/bin/activate
            cd penaltymodel_maxgap
            python setup.py sdist
            twine upload dist/*

workflows:
  version: 2
  test:
    jobs:
      - test-3.6
      - test-3.5
      - test-3.4
      - test-2.7
      - deploy-penaltymodel-core:
          requires:
          - test-3.6
          - test-3.5
          - test-3.4
          - test-2.7
          filters:
            tags:
              only: /penaltymodel-core [0-9]+(\.[0-9]+)(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy-penaltymodel-cache:
          requires:
          - test-3.6
          - test-3.5
          - test-3.4
          - test-2.7
          filters:
            tags:
              only: /penaltymodel-cache [0-9]+(\.[0-9]+)(\.[0-9]+)*/
            branches:
              ignore: /.*/
      - deploy-penaltymodel-maxgap:
          requires:
          - test-3.6
          - test-3.5
          - test-3.4
          - test-2.7
          filters:
            tags:
              only: /penaltymodel-maxgap [0-9]+(\.[0-9]+)(\.[0-9]+)*/
            branches:
              ignore: /.*/

